module GitHub.Enum.RepositoryVulnerabilityAlertDependencyScope exposing (RepositoryVulnerabilityAlertDependencyScope(..), decoder, encode, list)

{-| 
@docs encode, decoder, list, RepositoryVulnerabilityAlertDependencyScope
-}


import Json.Decode
import Json.Encode


type RepositoryVulnerabilityAlertDependencyScope
    = RUNTIME
    | DEVELOPMENT


list : List RepositoryVulnerabilityAlertDependencyScope
list =
    [ RUNTIME, DEVELOPMENT ]


decoder : Json.Decode.Decoder RepositoryVulnerabilityAlertDependencyScope
decoder =
    Json.Decode.andThen
        (\andThenUnpack ->
            \string ->
                case string of
                    "RUNTIME" ->
                        Json.Decode.succeed RUNTIME

                    "DEVELOPMENT" ->
                        Json.Decode.succeed DEVELOPMENT

                    _ ->
                        Json.Decode.fail "Invalid type"
        )
        Json.Decode.string


encode : RepositoryVulnerabilityAlertDependencyScope -> Json.Encode.Value
encode val =
    case val of
        RUNTIME ->
            Json.Encode.string "RUNTIME"

        DEVELOPMENT ->
            Json.Encode.string "DEVELOPMENT"


